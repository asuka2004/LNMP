user root;
worker_processes  2;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $request_time $upstream_cache_status';

    #access_log  logs/access.log  main;
    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  65;
    gzip  on;
    gzip_buffers 32 4k;
    gzip_comp_level 6;
    gzip_min_length 200;
    gzip_types text/plain  application/xml;
    #server {
    #    listen       80;
    #    server_name  localhost;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;
     #   location / {
      #      root   html;
      #      index  index.html index.htm;
      #  }
        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        #
       # error_page   500 502 503 504  /50x.html;
       # location = /50x.html {
       #     root   html;
       # }
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    proxy_cache_path /root/cache levels=1:2 keys_zone=Kung:10m max_size=1g
    inactive=60m use_temp_path=off;




    upstream lbs {
	server 191.168.88.103:8080 max_fails=2 fail_timeout=60s;
	server 192.168.88.103:8081 max_fails=2 fail_timeout=60s;
	#ip_hash;
    }
    server {
	
	listen 80;
	server_name kung.roc;
	access_log logs/kung.access.log main;

	location / {
		root /usr/local/nginx/html;
		index index.html;
		proxy_cache Kung;
		proxy_cache_valid 200 304 10m;
        #if ($remote_addr = 192.168.88.105) {
        #return 403;
        #}
	#if ($http_user_agent ~ MSIE) {
	#	rewrite ^.*$ /ie.html;
	#}         



		   }
        
        location /img {
	alias /usr/local/img/;	
        }
	
        location /java {
	proxy_pass http://lbs/api/v1/pub/web;
	proxy_redirect default;
	proxy_next_upstream error timeout http_502 http_500 http_503 http_404;
	proxy_intercept_errors on;
        proxy_cache Kung;
        proxy_cache_valid 200 304 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_key $host$uri$is_args$args;
        add_header Nginx-Cache "$upstream_cache_status";
	}


	location /yahoo {
	rewrite ^/(.*) https://tw.yahoo.com permanent;
	}
       
        error_page 404 500 502 503 504 =200 /default_api;
        location = /default_api {
	default_type application/json;
	return 200 '{"code":"-1","msg":"invoke fail, not found "}';
        } 

        #if (!-e $document_root$fastcgi_script_name) {
        #rewrite ^.*$ /404.html ;
        #    } 
	location ~ \.php$ {
            root html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }




        
  }
}
