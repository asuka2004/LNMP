
user root;
worker_processes 1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
 use epoll;
 worker_connections  1024;
}

#http {
#    include       mime.types;
#    default_type  application/octet-stream;

#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                  '$status $body_bytes_sent "$http_referer" '
#                 '"$http_user_agent" "$http_x_forwarded_for" $request_time';

#access_log  logs/access.log  main;

# sendfile        on;
#tcp_nopush     on;

#keepalive_timeout  0;
# keepalive_timeout  65;

    #gzip  on;
    #server {
     #   listen       80;
      #  server_name  file.roc;


        #charset koi8-r;

       # access_log  logs/access.log  main;

        #location / {
         #   root   html;
          #  index  kung.html;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
         #   root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #   nclude       mime.types;
    #       default_type  application/octet-stream;
    #
    #           log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                                 '$status $body_bytes_sent "$http_referer" '
    #                                                       '"$http_user_agent" "$http_x_forwarded_for" $request_time';
    #                                                       location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}




http {
 include       mime.types;
 #include       black_iplist.conf;
 default_type  application/octet-stream;

 log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" $upstream_response_time $upstream_cache_status';
 sendfile        on;
 keepalive_timeout  65;

 gzip on;
 gzip_min_length 1k;
 gzip_buffers 4 16k;
 gzip_comp_level 3;
 gzip_types application/javascript text/plain text/css application/json application/xml text/javascript;	    
 upstream lbs {
     server 192.168.88.53:8080 max_fails=2 fail_timeout=60s;
     server 192.168.88.53:8081 max_fails=2 fail_timeout=60s;
    }
 proxy_cache_path /root/cache levels=1:2
 keys_zone=Kung_cache:10m max_size=1g
 inactive=60m use_temp_path=off;

 server {
   listen   80;
     server_name Kung.roc;
     access_log logs/Kung.access.log  main;
  
   location / {
     root html;
     index index.html;
   }
  
   location /img {
     alias /usr/local/software/img/;
    }
 
   location /api {
     proxy_pass http://lbs/api/v1/pub/web;
     proxy_next_upstream error timeout http_500 http_503 http_404;
     proxy_redirect default;
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_intercept_errors on;
	
     proxy_cache Kung_cache; 
     proxy_cache_valid 200 304 10m;
     proxy_cache_valid 400 1m;
     proxy_cache_key $host$uri$is_args$args;
     add_header Nginx-Cache "$upstream_cache_status";	
   }
 
# test 
# location = /file/tmp/ {
#      return 1;
# }
# location ^~/file/tmp {
#      return 3;
# }
# location /file/tmp/ {
#      return 2;
# }
 #location ^~/file/ {
 #     return 3;
 #}
# location = / {
#      return 4;
# }
# location / {
#      return 5;
#}
# location ~^/ap/pub$ {
#      return 6;
#}
#test fail page status
 location = /default_api {
    index index.html
    default_type application/json;
    return 200 '{"code":"-1","msg":"invoke fail, not found""}';
   }

#allow  different domain
# add_header 'Access-Control-Allow-Origin' $http_origin;
# add_header 'Access-Control-Allow-Credentials' 'true';
# add_header 'Access-Control-Allow-Headers' 'DNT,web-token,apptoken,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
# add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS';
#     if ($request_method = 'OPTIONS') {
# add_header 'Access-Control-Max-Age' 1728000;
# add_header 'Content-Type' 'text/plain;charset=utf-8';
# add_header 'Content-Length' 0;
#     return 200;
# }
#

#test rewrite
 location /yahoo {
      rewrite ^/(.*) https://tw.yahoo.com/ last;
      root html;
      }
 }
}
